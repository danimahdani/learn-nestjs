var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.088,1,2.215]],["body/controllers/AppController.html",[0,1.61,1,3.276,2,1.228,3,0.285,4,0.247,5,0.247,6,3.181,7,0.538,8,1.4,9,4.934,10,5.851,11,1.853,12,0.027,13,0.976,14,3.772,15,1.4,16,1.905,17,4.943,18,4.943,19,3.772,20,0.476,21,0.587,22,3.032,23,3.181,24,0.285,25,0.015,26,1.764,27,3.181,28,1.501,29,3.772,30,3.772,31,3.772,32,3.772,33,0.02,34,0.02]],["title/modules/AppModule.html",[35,0.947,36,2.215]],["body/modules/AppModule.html",[1,2.984,2,1.236,3,0.195,4,0.169,5,0.169,12,0.027,20,0.607,21,0.401,22,3.042,23,2.177,24,0.195,25,0.01,33,0.015,34,0.015,35,1.275,36,4.363,37,1.04,38,1.04,39,1.207,40,1.207,41,1.04,42,2.105,43,1.207,44,2.177,45,2.177,46,2.177,47,3.325,48,3.325,49,3.325,50,2.586,51,3.325,52,3.325,53,2.799,54,1.775,55,1.207,56,1.207,57,2.582,58,2.707,59,2.516,60,2.582,61,2.582,62,2.582,63,2.582,64,2.582,65,2.582,66,2.582,67,2.582,68,2.582,69,2.177,70,2.177,71,2.177,72,2.582,73,2.582,74,2.582,75,2.582,76,2.582,77,2.582]],["title/injectables/AppService.html",[22,1.838,78,0.711]],["body/injectables/AppService.html",[3,0.33,4,0.286,5,0.286,7,0.623,8,1.538,9,5.21,12,0.027,13,0.862,15,1.237,16,1.768,20,0.421,21,0.679,22,2.986,24,0.33,25,0.017,28,1.327,33,0.022,34,0.022,78,1.155,79,1.76,80,3.684,81,4.369,82,4.369,83,4.369]],["title/controllers/AuthController.html",[0,1.088,84,2.215]],["body/controllers/AuthController.html",[0,0.759,2,0.759,3,0.176,4,0.153,5,0.332,7,0.332,8,0.996,11,1.769,12,0.027,13,0.931,15,1.336,20,0.532,21,0.362,24,0.176,25,0.009,26,1.09,28,1.433,33,0.014,34,0.014,84,2.331,85,1.965,86,1.401,87,2.33,88,2.857,89,2.966,90,2.966,91,2.966,92,2.966,93,1.965,94,2.837,95,3.517,96,2.33,97,1.769,98,1.648,99,0.901,100,1.536,101,2.837,102,2.388,103,2.33,104,2.33,105,2.33,106,4.49,107,1.965,108,2.837,109,3.517,110,2.33,111,2.33,112,4.236,113,2.33,114,2.33,115,1.724,116,1.724,117,3.517,118,1.965,119,3.517,120,2.33,121,1.965,122,1.965,123,1.965,124,1.401,125,2.33,126,2.33,127,1.965,128,1.965,129,3.517,130,2.33,131,2.33,132,2.33,133,2.388,134,2.33,135,2.33,136,2.33,137,2.966,138,2.33,139,2.33,140,2.33,141,2.33,142,2.33,143,2.33,144,2.33,145,2.33,146,2.33,147,2.33,148,3.517,149,2.33,150,2.33,151,2.33,152,2.33,153,2.33]],["title/injectables/AuthGuard.html",[78,0.711,124,2.01]],["body/injectables/AuthGuard.html",[3,0.242,4,0.21,5,0.21,7,0.458,8,1.256,12,0.027,13,0.875,15,1.256,20,0.489,21,0.499,24,0.242,25,0.013,28,1.347,33,0.018,34,0.018,78,0.943,79,1.293,97,1.904,98,1.549,99,1.081,100,1.444,124,3.054,154,2.707,155,2.939,156,4.435,157,5.08,158,4.435,159,3.21,160,5.479,161,3.21,162,4.435,163,4.435,164,4.435,165,5.08,166,4.435,167,3.811,168,3.21,169,5.08,170,5.08,171,4.435,172,2.707,173,3.21,174,2.128,175,3.21,176,2.707,177,2.376]],["title/modules/AuthModule.html",[35,0.947,47,2.01]],["body/modules/AuthModule.html",[2,1.409,3,0.234,4,0.203,5,0.203,12,0.027,20,0.593,21,0.482,24,0.234,25,0.012,33,0.017,34,0.017,35,1.412,37,1.248,38,1.248,39,1.449,40,1.449,41,1.248,42,2.331,43,1.449,47,3.809,50,2.75,54,2.023,55,1.449,56,1.449,59,2.867,84,3.304,120,3.234,121,2.612,167,2.053,174,2.053,178,2.612,179,2.612,180,3.098,181,3.535,182,3.098,183,3.098,184,2.292,185,3.098,186,3.098,187,2.292,188,1.863,189,2.292,190,3.098,191,3.098,192,3.098,193,2.292,194,3.098,195,3.098,196,2.612,197,3.098,198,2.292,199,2.292,200,3.098,201,2.612,202,2.612]],["title/injectables/AuthService.html",[78,0.711,120,1.838]],["body/injectables/AuthService.html",[3,0.122,4,0.106,5,0.106,7,0.23,8,0.745,12,0.027,13,0.899,15,1.202,16,1.086,20,0.462,21,0.251,24,0.122,25,0.006,26,0.754,28,1.288,33,0.01,34,0.01,78,0.56,79,0.649,88,2.604,89,2.219,90,2.219,91,2.219,92,2.219,93,2.219,94,2.315,97,1.706,98,1.749,99,0.969,100,1.482,101,2.888,102,1.948,107,2.219,108,2.315,120,1.447,122,1.359,123,1.359,133,2.535,167,3.017,176,3.578,177,3.14,187,1.193,188,0.969,189,1.193,198,1.193,199,1.193,201,1.359,202,1.359,203,1.359,204,2.632,205,1.068,206,1.193,207,1.8,208,4.803,209,1.612,210,1.948,211,2.632,212,1.612,213,1.359,214,1.612,215,2.632,216,1.973,217,1.612,218,2.931,219,1.612,220,2.632,221,4.803,222,1.612,223,2.632,224,1.193,225,1.193,226,1.612,227,1.612,228,1.359,229,1.359,230,3.32,231,2.632,232,3.85,233,2.117,234,2.632,235,3.336,236,1.612,237,1.612,238,1.612,239,1.612,240,1.612,241,1.612,242,2.632,243,1.612,244,2.849,245,2.849,246,2.211,247,1.612,248,2.468,249,1.948,250,1.948,251,2.632,252,1.612,253,1.612,254,1.193,255,1.612,256,1.612,257,2.632,258,1.612,259,1.612,260,1.612,261,1.612,262,1.612,263,1.612,264,1.359,265,3.578,266,1.068,267,2.632,268,2.632,269,1.612,270,1.359,271,1.612,272,1.612,273,1.359,274,1.612,275,1.612]],["title/controllers/CatsController.html",[0,1.088,58,2.01]],["body/controllers/CatsController.html",[0,1.093,2,1.093,3,0.253,4,0.22,5,0.22,7,0.479,8,1.295,11,1.949,12,0.027,13,1.026,15,1.581,16,1.818,20,0.44,21,0.522,24,0.253,25,0.013,26,1.57,28,1.774,33,0.018,34,0.018,53,2.314,58,2.749,86,2.018,97,1.258,98,1.172,99,0.714,100,1.093,276,2.83,277,5.2,278,5.583,279,4.131,280,3.383,281,4.572,282,3.357,283,3.357,284,3.357,285,3.855,286,3.357,287,4.572,288,2.484,289,2.83,290,3.357,291,3.357,292,3.357,293,3.357,294,3.357,295,3.357,296,3.357,297,3.357]],["title/modules/CatsModule.html",[35,0.947,48,2.01]],["body/modules/CatsModule.html",[2,1.665,3,0.3,4,0.261,5,0.261,12,0.026,20,0.544,21,0.618,24,0.3,25,0.016,33,0.02,34,0.02,35,1.601,37,1.601,38,1.601,39,1.859,40,1.859,41,1.601,42,2.644,43,1.859,48,3.801,53,3.199,54,2.392,55,1.859,56,1.859,58,3.4,289,3.353,298,3.976,299,3.976,300,3.976,301,3.976]],["title/injectables/CatsService.html",[53,1.691,78,0.711]],["body/injectables/CatsService.html",[3,0.305,4,0.265,5,0.265,7,0.578,8,1.465,12,0.027,13,0.799,15,1.147,16,1.318,20,0.39,21,0.629,24,0.305,25,0.016,28,1.23,33,0.02,34,0.02,53,2.618,78,1.101,79,1.631,97,1.518,98,1.414,99,0.861,100,1.318,216,1.755,218,2.846,302,3.414,303,5.175,304,5.175,305,4.049,306,4.363,307,5.175,308,5.175,309,3.414,310,4.049]],["title/classes/CreateSchoolDto.html",[25,0.013,311,1.838]],["body/classes/CreateSchoolDto.html",[3,0.259,4,0.225,5,0.225,7,0.49,11,2.113,12,0.026,13,1.113,16,2.055,20,0.331,24,0.259,25,0.018,33,0.018,34,0.018,99,1.199,100,1.976,233,2.894,311,2.554,312,1.606,313,4.965,314,2.542,315,2.172,316,5.262,317,5.262,318,5.262,319,3.916,320,3.435,321,3.435,322,3.435,323,3.435,324,2.896,325,3.435,326,3.916,327,3.078,328,4.753,329,3.54,330,1.889]],["title/classes/CreateTaskDto.html",[25,0.013,331,2.01]],["body/classes/CreateTaskDto.html",[3,0.292,4,0.254,5,0.254,7,0.552,11,1.884,12,0.026,13,1.102,16,1.924,20,0.373,24,0.292,25,0.02,33,0.02,34,0.02,99,1.188,216,2.179,312,1.81,315,2.351,324,4.239,327,3.701,329,3.357,330,2.129,331,3.023,332,4.983,333,2.865,334,3.701,335,3.701,336,4.131,337,3.264,338,3.264,339,3.264]],["title/injectables/JwtStrategy.html",[78,0.711,181,2.01]],["body/injectables/JwtStrategy.html",[3,0.263,4,0.229,5,0.229,7,0.498,8,1.329,12,0.027,13,0.927,15,0.988,20,0.546,21,0.543,24,0.263,25,0.014,28,1.06,33,0.019,34,0.019,78,0.999,79,1.405,88,2.48,97,1.308,98,1.219,99,0.742,100,1.136,102,1.766,155,3.111,174,2.313,181,2.822,188,2.098,189,2.582,193,3.925,196,2.942,199,2.582,205,3.515,213,2.942,218,1.919,233,1.919,340,2.942,341,4.694,342,4.694,343,3.489,344,4.694,345,3.489,346,3.489,347,3.489,348,3.489,349,2.942,350,3.489,351,3.489,352,3.489,353,3.489,354,3.489,355,3.489,356,3.489,357,2.942,358,3.489]],["title/controllers/LatihanController.html",[0,1.088,359,2.215]],["body/controllers/LatihanController.html",[0,1.362,2,1.362,3,0.316,4,0.274,5,0.274,7,0.597,8,1.496,11,1.568,12,0.027,13,0.826,15,1.185,20,0.509,21,0.65,24,0.316,25,0.017,26,1.956,28,1.27,33,0.021,34,0.021,86,2.515,359,3.502,360,3.527,361,3.527,362,5.129,363,4.183,364,3.184,365,3.527,366,4.183,367,4.183]],["title/modules/LatihanModule.html",[35,0.947,49,2.01]],["body/modules/LatihanModule.html",[2,1.665,3,0.3,4,0.261,5,0.261,12,0.026,20,0.544,21,0.618,24,0.3,25,0.016,33,0.02,34,0.02,35,1.601,37,1.601,38,1.601,39,1.859,40,1.859,41,1.601,42,2.644,43,1.859,49,3.801,54,2.392,55,1.859,56,1.859,359,3.748,364,3.477,365,3.353,368,3.353,369,3.353,370,3.976,371,3.976]],["title/injectables/LatihanService.html",[78,0.711,364,1.838]],["body/injectables/LatihanService.html",[3,0.319,4,0.277,5,0.277,7,0.603,8,1.505,12,0.027,13,0.834,15,1.196,16,1.375,20,0.407,21,0.657,24,0.319,25,0.017,28,1.282,33,0.021,34,0.021,78,1.131,79,1.701,216,1.83,246,3.523,306,4.481,309,3.561,361,3.561,362,5.147,364,2.923,372,3.561,373,4.223]],["title/classes/LoginDto.html",[25,0.013,94,2.01]],["body/classes/LoginDto.html",[3,0.304,4,0.264,5,0.264,7,0.575,11,1.934,12,0.026,13,1.018,16,1.954,20,0.388,24,0.304,25,0.02,33,0.02,34,0.02,94,3.102,99,1.098,233,3.13,254,4.211,312,1.885,315,2.413,327,3.772,329,3.422,330,2.216,374,3.398,375,3.398,376,4.03,377,3.398,378,4.03,379,3.398,380,3.398,381,3.398,382,3.398]],["title/modules/PrismaModule.html",[35,0.947,50,1.563]],["body/modules/PrismaModule.html",[3,0.297,4,0.258,5,0.258,12,0.026,20,0.49,21,0.613,24,0.297,25,0.016,33,0.02,34,0.02,35,1.595,37,1.587,38,1.587,39,1.843,40,1.843,41,1.587,42,2.633,43,2.633,50,3.001,54,2.378,55,1.843,56,1.843,207,3.138,383,3.323,384,3.323,385,3.323,386,3.94,387,3.94]],["title/injectables/PrismaService.html",[78,0.711,207,1.563]],["body/injectables/PrismaService.html",[3,0.273,4,0.237,5,0.237,7,0.516,8,1.362,12,0.027,13,0.949,15,1.362,20,0.463,21,0.562,24,0.273,25,0.014,33,0.019,34,0.019,78,1.023,79,1.457,88,2.94,97,1.356,98,1.263,99,0.77,100,1.178,133,2.433,155,3.187,207,2.249,388,3.051,389,5.401,390,4.809,391,6.16,392,4.809,393,5.756,394,3.618,395,3.051,396,3.618,397,3.051,398,3.618,399,3.618,400,3.618,401,3.618]],["title/classes/RegisterDto.html",[25,0.013,108,2.01]],["body/classes/RegisterDto.html",[3,0.283,4,0.246,5,0.246,7,0.536,11,2.062,12,0.026,13,1.086,16,2.027,20,0.362,24,0.283,25,0.02,33,0.02,34,0.02,98,1.921,99,1.171,108,2.964,233,3.026,254,4.071,312,1.756,315,2.305,326,4.156,327,3.872,329,3.512,330,2.066,375,3.167,377,3.167,379,3.167,380,3.167,381,3.167,382,3.167,402,3.167,403,3.756,404,3.756,405,3.756,406,3.756]],["title/classes/School.html",[25,0.013,407,2.01]],["body/classes/School.html",[3,0.378,4,0.329,5,0.329,12,0.025,24,0.378,25,0.02,33,0.023,34,0.023,312,2.344,407,3.547,408,4.227]],["title/controllers/SchoolController.html",[0,1.088,409,2.215]],["body/controllers/SchoolController.html",[0,0.781,2,0.781,3,0.181,4,0.157,5,0.157,7,0.342,8,1.018,11,1.923,12,0.027,13,1.013,15,1.453,16,1.912,20,0.461,21,0.373,24,0.181,25,0.01,26,1.122,27,2.024,28,1.558,33,0.014,34,0.014,86,1.443,88,2.96,97,1.795,98,1.672,99,1.019,100,1.559,102,2.596,115,2.661,116,3.191,133,2.596,218,2.961,279,3.544,280,2.661,285,3.032,288,1.776,311,2.961,407,1.443,409,2.383,410,2.024,411,2.661,412,3.032,413,3.636,414,2.024,415,2.4,416,2.4,417,2.024,418,2.4,419,2.024,420,3.596,421,2.4,422,2.024,423,3.452,424,3.596,425,2.4,426,2.024,427,2.024,428,2.371,429,2.024,430,1.591,431,2.661,432,1.591,433,2.4,434,2.4,435,2.4,436,2.4,437,2.4,438,2.4,439,2.4,440,2.4,441,2.4,442,2.4]],["title/modules/SchoolModule.html",[35,0.947,51,2.01]],["body/modules/SchoolModule.html",[2,1.592,3,0.28,4,0.243,5,0.243,12,0.027,20,0.56,21,0.577,24,0.28,25,0.015,33,0.019,34,0.019,35,1.549,37,1.494,38,1.494,39,1.734,40,1.734,41,1.494,42,2.557,43,1.734,50,2.901,51,3.859,54,2.286,55,1.734,56,1.734,59,3.24,184,2.744,409,3.624,428,3.412,429,3.127,443,3.127,444,3.709,445,3.127,446,3.709,447,3.709]],["title/injectables/SchoolService.html",[78,0.711,428,1.838]],["body/injectables/SchoolService.html",[3,0.155,4,0.135,5,0.135,7,0.294,8,0.906,12,0.027,13,1.001,15,1.357,20,0.426,21,0.32,24,0.155,25,0.008,26,0.963,28,1.54,33,0.013,34,0.013,78,0.681,79,0.829,88,2.876,97,1.796,98,1.673,99,1.019,100,1.56,101,3.182,102,2.424,133,2.424,205,1.365,206,1.523,207,2.068,210,2.367,216,2.435,218,3.09,224,1.523,225,1.523,230,3.175,244,3.752,245,3.545,246,2.12,248,2.367,249,1.523,250,1.523,270,1.736,279,3.273,280,2.367,311,2.789,407,3.453,411,2.367,412,2.697,413,2.697,414,2.697,417,2.697,419,2.697,422,2.697,423,3.289,428,1.759,430,1.365,431,2.367,432,1.365,448,1.736,449,2.059,450,2.059,451,2.059,452,2.059,453,2.059,454,2.059,455,2.059,456,3.199,457,2.059,458,2.059,459,2.059,460,2.059,461,1.736,462,1.042]],["title/interfaces/Task.html",[462,1.691,463,2.215]],["body/interfaces/Task.html",[3,0.206,4,0.179,5,0.179,7,0.389,12,0.027,16,1.835,24,0.298,33,0.016,34,0.016,99,0.988,216,2.013,230,1.806,266,1.806,315,1.847,334,4.255,335,4.255,462,3.387,463,1.806,464,2.725,465,2.017,466,4.255,467,3.437,468,4.085,469,3.916,470,3.916,471,3.916,472,3.916,473,3.437,474,3.437,475,3.916,476,3.437,477,3.916]],["title/controllers/TaskController.html",[0,1.088,478,2.215]],["body/controllers/TaskController.html",[0,0.761,2,0.761,3,0.176,4,0.153,5,0.153,7,0.333,8,0.998,11,1.901,12,0.027,13,1.001,15,1.436,20,0.488,21,0.363,24,0.176,25,0.009,26,1.092,28,1.54,33,0.014,34,0.014,86,1.405,88,2.946,97,1.771,98,1.65,99,1.005,100,1.539,101,2.841,102,2.566,115,3.496,116,2.608,118,1.97,124,1.405,133,2.391,137,4.276,216,2.526,288,1.729,331,2.841,426,1.97,427,1.97,430,1.549,432,1.549,462,1.182,466,3.533,478,2.336,479,1.97,480,2.971,481,2.971,482,3.984,483,2.971,484,3.327,485,2.336,486,2.336,487,2.336,488,1.97,489,2.336,490,2.336,491,2.336,492,2.336,493,1.97,494,2.336,495,2.336,496,1.97,497,2.336,498,2.336,499,2.333,500,1.97,501,2.971,502,2.336,503,2.336,504,2.336,505,2.336,506,2.336,507,2.336,508,2.336,509,2.336,510,2.336,511,2.336,512,2.336,513,2.336,514,2.336,515,2.336]],["title/modules/TaskModule.html",[35,0.947,52,2.01]],["body/modules/TaskModule.html",[2,1.592,3,0.28,4,0.243,5,0.243,12,0.027,20,0.56,21,0.577,24,0.28,25,0.015,33,0.019,34,0.019,35,1.549,37,1.494,38,1.494,39,1.734,40,1.734,41,1.494,42,2.557,43,1.734,50,2.901,52,3.859,54,2.286,55,1.734,56,1.734,59,3.24,184,2.744,478,3.624,499,3.412,500,3.127,516,3.127,517,3.709,518,3.127,519,3.709,520,3.709]],["title/injectables/TaskService.html",[78,0.711,499,1.838]],["body/injectables/TaskService.html",[3,0.143,4,0.124,5,0.124,7,0.27,8,0.849,12,0.027,13,0.967,15,1.304,20,0.471,21,0.466,24,0.143,25,0.008,28,1.487,33,0.012,34,0.012,78,0.638,79,0.763,88,2.827,97,1.726,98,1.71,99,0.98,100,1.5,101,3.44,102,2.331,106,3.136,133,2.331,167,1.256,205,1.987,206,1.402,207,1.977,210,2.218,216,2.373,218,2.325,224,1.402,225,1.402,229,2.528,230,3.053,233,1.042,244,3.624,245,3.408,246,1.987,248,1.402,249,1.402,250,1.402,264,1.598,265,3.136,273,1.598,331,2.542,336,2.218,430,1.256,432,1.256,461,1.598,462,2.139,466,3.246,480,2.528,481,2.528,482,3.565,483,2.528,484,2.944,488,2.528,493,2.528,496,2.528,499,1.649,501,2.528,521,1.598,522,1.895,523,2.998,524,1.895,525,1.895,526,1.895,527,1.895,528,1.895,529,1.598,530,1.895,531,1.895,532,1.895,533,3.719,534,4.228,535,1.895,536,1.895,537,1.895,538,1.895,539,2.998,540,1.895,541,2.998,542,1.895]],["title/classes/UpdateSchoolDto.html",[25,0.013,423,2.01]],["body/classes/UpdateSchoolDto.html",[3,0.345,4,0.3,5,0.3,12,0.026,20,0.537,24,0.345,25,0.018,33,0.022,34,0.022,155,3.701,311,2.515,312,2.138,314,3.383,411,3.383,423,3.357,431,3.383,543,3.855,544,5.583,545,4.572,546,3.855,547,3.855]],["title/classes/UpdateTask.html",[25,0.013,484,2.01]],["body/classes/UpdateTask.html",[3,0.287,4,0.249,5,0.249,7,0.543,11,1.863,12,0.026,13,1.093,16,1.912,20,0.366,24,0.287,25,0.02,33,0.02,34,0.02,99,1.178,100,1.912,216,2.155,312,1.779,315,2.324,319,3.208,328,4.668,329,3.329,330,2.092,333,2.815,334,3.67,335,3.67,336,4.097,337,3.208,338,3.208,339,3.208,484,2.989,548,4.95,549,3.805]],["title/coverage.html",[550,3.373]],["body/coverage.html",[0,1.814,1,1.747,5,0.173,6,2.223,12,0.027,22,1.45,25,0.023,33,0.015,34,0.015,41,1.062,53,1.334,58,1.585,78,1.28,80,2.223,84,1.747,85,2.223,94,1.585,99,0.561,108,1.585,120,1.45,124,1.585,154,2.223,177,1.95,181,1.585,188,1.585,203,2.223,207,1.233,266,1.747,276,2.223,302,2.223,311,1.45,313,2.223,314,2.852,331,1.585,332,2.223,333,2.852,340,2.223,359,1.747,360,2.223,364,1.45,372,2.223,374,2.223,388,2.223,402,2.223,407,1.585,408,2.223,409,1.747,410,2.223,423,1.585,428,1.45,448,2.223,462,1.334,463,1.747,465,2.852,478,1.747,479,2.223,484,1.585,499,1.45,521,2.223,543,2.223,548,2.223,550,1.95,551,2.636,552,2.636,553,2.636,554,6.723,555,5.334,556,5.013,557,3.854,558,4.557,559,5.334,560,2.223,561,3.854,562,5.334,563,2.223,564,2.636,565,3.854,566,2.636,567,2.636]],["title/dependencies.html",[38,1.619,568,2.355]],["body/dependencies.html",[12,0.027,21,0.627,25,0.02,33,0.02,34,0.02,38,1.623,69,3.398,70,3.398,127,3.398,128,3.398,172,3.398,174,2.671,187,2.982,193,2.982,228,3.398,330,2.216,349,4.351,397,3.398,529,3.398,546,3.398,547,3.398,569,5.691,570,4.03,571,4.03,572,4.03,573,4.03,574,4.03,575,4.03,576,4.03,577,4.03,578,4.03,579,4.03,580,4.03,581,4.03,582,4.03,583,4.03]],["title/miscellaneous/functions.html",[584,1.851,585,3.389]],["body/miscellaneous/functions.html",[7,0.724,12,0.024,33,0.024,34,0.024,41,2.537,563,4.276,584,3.361,585,4.276,586,5.071]],["title/index.html",[7,0.398,587,2.793,588,2.793]],["body/index.html",[4,0.222,12,0.026,33,0.018,34,0.018,71,2.852,395,2.852,468,2.242,550,2.503,589,3.382,590,3.382,591,4.596,592,3.382,593,3.382,594,3.382,595,3.382,596,3.382,597,3.382,598,5.22,599,3.382,600,3.382,601,3.382,602,3.382,603,5.22,604,6.18,605,3.382,606,3.382,607,6.041,608,3.382,609,3.382,610,4.596,611,3.382,612,3.382,613,3.382,614,3.382,615,4.596,616,4.596,617,3.382,618,3.382,619,3.382,620,4.596,621,4.596,622,3.382,623,3.382,624,3.382,625,3.382,626,3.382,627,2.852,628,3.382,629,3.382,630,3.382,631,3.382,632,3.382,633,3.382,634,3.382,635,3.382,636,3.382,637,2.852,638,3.382,639,3.382,640,3.382,641,3.382,642,3.382,643,3.382,644,2.852]],["title/modules.html",[37,1.836]],["body/modules.html",[12,0.022,33,0.022,34,0.022,36,2.896,37,1.76,47,2.627,48,2.627,49,2.627,50,2.043,51,2.627,52,2.627,627,5.537,645,6.567,646,6.567,647,6.567]],["title/overview.html",[648,3.844]],["body/overview.html",[2,0.927,12,0.026,22,2.618,33,0.016,34,0.016,35,0.807,36,4.382,37,1.147,38,1.147,39,1.332,40,1.332,41,1.147,42,1.332,43,1.332,44,2.402,45,2.402,46,2.402,47,3.688,48,3.307,49,3.307,50,2.868,51,3.542,52,3.542,53,2.63,54,1.906,55,1.332,56,1.332,79,1.147,120,2.618,178,2.402,179,2.402,181,2.862,207,2.755,312,1.332,364,2.618,368,2.402,369,2.402,383,2.402,384,2.402,385,2.402,428,2.618,443,2.402,445,2.402,463,1.888,467,2.108,473,2.108,474,3.016,476,2.108,499,2.618,516,2.402,518,2.402,648,2.402]],["title/properties.html",[315,1.879,568,2.355]],["body/properties.html",[12,0.026,33,0.023,34,0.023,315,2.331,468,3.304,637,4.203,644,4.203,649,4.985,650,4.985,651,4.985]],["title/miscellaneous/variables.html",[584,1.851,652,3.389]],["body/miscellaneous/variables.html",[7,0.41,12,0.027,33,0.016,34,0.016,99,0.873,188,2.468,198,2.128,266,2.721,334,4.134,335,4.134,357,2.425,462,3.386,465,2.128,466,4.134,467,3.542,468,4.134,469,4.036,470,4.036,471,4.036,472,4.036,473,3.542,474,3.542,475,4.036,476,3.542,477,4.036,560,2.425,584,1.906,652,2.425,653,2.876,654,2.876,655,2.876,656,4.105,657,4.105,658,2.876,659,2.876]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTask.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":650,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":562,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":467,"title":{},"body":{"interfaces/Task.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10",{"_index":477,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["10.0.3",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":469,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":309,"title":{},"body":{"injectables/CatsService.html":{},"injectables/LatihanService.html":{}}}],["3",{"_index":470,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["3600",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":471,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":472,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["5.1.1",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["5.7.1",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":473,"title":{},"body":{"interfaces/Task.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":474,"title":{},"body":{"interfaces/Task.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["7.2.0",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":475,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":476,"title":{},"body":{"interfaces/Task.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["9.0.0",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["accesstoken",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["action",{"_index":295,"title":{},"body":{"controllers/CatsController.html":{}}}],["address",{"_index":316,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["already",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":628,"title":{},"body":{"index.html":{}}}],["app",{"_index":395,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":401,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":597,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":36,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["asdqwe123",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["auth",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":84,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":124,"title":{"injectables/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["authguardpassport",{"_index":173,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authguardpassport('jwt",{"_index":156,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authmodule",{"_index":47,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":637,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":120,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["await",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["backers",{"_index":629,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["body",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["boolean",{"_index":163,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["bootstrap",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":647,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":645,"title":{},"body":{"modules.html":{}}}],["buat",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["building",{"_index":592,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":157,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["canactivate(context",{"_index":159,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["cat",{"_index":297,"title":{},"body":{"controllers/CatsController.html":{}}}],["catcategory",{"_index":308,"title":{},"body":{"injectables/CatsService.html":{}}}],["cats",{"_index":277,"title":{},"body":{"controllers/CatsController.html":{}}}],["cats.controller",{"_index":301,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats.service",{"_index":289,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["cats/cats.controller",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["cats/cats.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["cats/cats.service",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["catscontroller",{"_index":58,"title":{"controllers/CatsController.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catservice",{"_index":291,"title":{},"body":{"controllers/CatsController.html":{}}}],["catsmodule",{"_index":48,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":53,"title":{"injectables/CatsService.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"coverage.html":{},"overview.html":{}}}],["cb",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["cb(null",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkexists",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkpassword",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":25,"title":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTask.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTask.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":312,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTask.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":298,"title":{},"body":{"modules/CatsModule.html":{}}}],["cluster_catsmodule_providers",{"_index":299,"title":{},"body":{"modules/CatsModule.html":{}}}],["cluster_latihanmodule",{"_index":368,"title":{},"body":{"modules/LatihanModule.html":{},"overview.html":{}}}],["cluster_latihanmodule_providers",{"_index":369,"title":{},"body":{"modules/LatihanModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":383,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":385,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":384,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":443,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_imports",{"_index":444,"title":{},"body":{"modules/SchoolModule.html":{}}}],["cluster_schoolmodule_providers",{"_index":445,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":516,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_imports",{"_index":517,"title":{},"body":{"modules/TaskModule.html":{}}}],["cluster_taskmodule_providers",{"_index":518,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["compare",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(data.password",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["constructor",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(prisma",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["constructor(private",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{}}}],["context",{"_index":162,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CatsController.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CatsController.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('cats",{"_index":290,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller('latihan",{"_index":366,"title":{},"body":{"controllers/LatihanController.html":{}}}],["controller('school",{"_index":433,"title":{},"body":{"controllers/SchoolController.html":{}}}],["controller('task",{"_index":503,"title":{},"body":{"controllers/TaskController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["coverage",{"_index":550,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":411,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["create(@body",{"_index":434,"title":{},"body":{"controllers/SchoolController.html":{}}}],["create(createschooldto",{"_index":414,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["createschooldto",{"_index":311,"title":{"classes/CreateSchoolDto.html":{}},"body":{"classes/CreateSchoolDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["createtask",{"_index":480,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["createtask(@body",{"_index":504,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(body",{"_index":485,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(data",{"_index":523,"title":{},"body":{"injectables/TaskService.html":{}}}],["createtaskdto",{"_index":331,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["createuser",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["data",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["data.email",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.password",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.user_id",{"_index":532,"title":{},"body":{"injectables/TaskService.html":{}}}],["declarations",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CatsController.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"controllers/LatihanController.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{},"classes/UpdateTask.html":{}}}],["default",{"_index":656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTask.html":{}}}],["delete",{"_index":427,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["delete('/:task_id",{"_index":513,"title":{},"body":{"controllers/TaskController.html":{}}}],["delete(':id",{"_index":420,"title":{},"body":{"controllers/SchoolController.html":{}}}],["deleted",{"_index":461,"title":{},"body":{"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["deletetaskbyid",{"_index":481,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["deletetaskbyid(@param('task_id",{"_index":514,"title":{},"body":{"controllers/TaskController.html":{}}}],["deletetaskbyid(task_id",{"_index":488,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dependencies",{"_index":38,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":468,"title":{},"body":{"interfaces/Task.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["destination",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["detail",{"_index":292,"title":{},"body":{"controllers/CatsController.html":{}}}],["detailcat",{"_index":278,"title":{},"body":{"controllers/CatsController.html":{}}}],["development",{"_index":606,"title":{},"body":{"index.html":{}}}],["diskstorage",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["documentation",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":430,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dto/login.dto",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/register.dto",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":432,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dunia",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["e2e",{"_index":617,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":593,"title":{},"body":{"index.html":{}}}],["email",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"injectables/TaskService.html":{}}}],["enableshutdownhooks",{"_index":390,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":392,"title":{},"body":{"injectables/PrismaService.html":{}}}],["err",{"_index":170,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["example",{"_index":603,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":160,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["exists",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["expired",{"_index":357,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTask.html":{}}}],["exports",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["express",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["extends",{"_index":155,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateSchoolDto.html":{}}}],["extractjwt",{"_index":347,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":352,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":196,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTask.html":{},"coverage.html":{}}}],["file.originalname",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor('avatar",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["filename",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["findall",{"_index":279,"title":{},"body":{"controllers/CatsController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone",{"_index":280,"title":{},"body":{"controllers/CatsController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone(@param",{"_index":293,"title":{},"body":{"controllers/CatsController.html":{}}}],["findone(@param('id",{"_index":437,"title":{},"body":{"controllers/SchoolController.html":{}}}],["findone(id",{"_index":417,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findone(params",{"_index":284,"title":{},"body":{"controllers/CatsController.html":{}}}],["found",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["framework",{"_index":591,"title":{},"body":{"index.html":{}}}],["function",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":585,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatejwt",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt(payload",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/:task_id",{"_index":507,"title":{},"body":{"controllers/TaskController.html":{}}}],["get(':id",{"_index":285,"title":{},"body":{"controllers/CatsController.html":{},"controllers/SchoolController.html":{}}}],["get('detail",{"_index":281,"title":{},"body":{"controllers/CatsController.html":{}}}],["get('profile",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('test",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["getalltask",{"_index":482,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["getdetailcat",{"_index":303,"title":{},"body":{"injectables/CatsService.html":{}}}],["getdetailcat(id",{"_index":304,"title":{},"body":{"injectables/CatsService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getlatihan",{"_index":362,"title":{},"body":{"controllers/LatihanController.html":{},"injectables/LatihanService.html":{}}}],["gettaskbyid",{"_index":483,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gettaskbyid(@param('task_id",{"_index":508,"title":{},"body":{"controllers/TaskController.html":{}}}],["gettaskbyid(task_id",{"_index":493,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["getting",{"_index":587,"title":{"index.html":{}},"body":{}}],["grow",{"_index":624,"title":{},"body":{"index.html":{}}}],["halo",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["handlerequest",{"_index":158,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["handlerequest(err",{"_index":166,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["hash",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash(data.password",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["here",{"_index":634,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('bad",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception('user",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":641,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["httpstatus.bad_request",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.found",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.not_found",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["httpstatus.ok",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["httpstatus.unauthorized",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["idcat",{"_index":307,"title":{},"body":{"injectables/CatsService.html":{}}}],["identifier",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":353,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":398,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTask.html":{}}}],["imports",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["include",{"_index":537,"title":{},"body":{"injectables/TaskService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTask.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":393,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTask.html":{}}}],["inject",{"_index":530,"title":{},"body":{"injectables/TaskService.html":{}}}],["inject(request",{"_index":531,"title":{},"body":{"injectables/TaskService.html":{}}}],["injectable",{"_index":78,"title":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["injectables",{"_index":79,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["installation",{"_index":602,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":605,"title":{},"body":{"index.html":{}}}],["interface",{"_index":463,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":464,"title":{},"body":{"interfaces/Task.html":{}}}],["invalid",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["isemail",{"_index":326,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty",{"_index":327,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty()@isstring",{"_index":375,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty()@isstring()@isemail",{"_index":403,"title":{},"body":{"classes/RegisterDto.html":{}}}],["isnotempty()@isstring()@minlength(6)@maxlength(20",{"_index":377,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isoptional",{"_index":328,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateTask.html":{}}}],["isoptional()@isstring",{"_index":549,"title":{},"body":{"classes/UpdateTask.html":{}}}],["isstring",{"_index":329,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTask.html":{}}}],["isstring()@isnotempty",{"_index":324,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{}}}],["isstring()@isoptional",{"_index":319,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateTask.html":{}}}],["isstring()@isoptional()@isemail",{"_index":321,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["join",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_config",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt_config.expired",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwt_config.secret",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":351,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":181,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":638,"title":{},"body":{"index.html":{}}}],["latihan",{"_index":361,"title":{},"body":{"controllers/LatihanController.html":{},"injectables/LatihanService.html":{}}}],["latihan.controller",{"_index":371,"title":{},"body":{"modules/LatihanModule.html":{}}}],["latihan.service",{"_index":365,"title":{},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{}}}],["latihan/latihan.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["latihancontroller",{"_index":359,"title":{"controllers/LatihanController.html":{}},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"coverage.html":{}}}],["latihanmodule",{"_index":49,"title":{"modules/LatihanModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LatihanModule.html":{},"modules.html":{},"overview.html":{}}}],["latihanservice",{"_index":364,"title":{"injectables/LatihanService.html":{}},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"coverage.html":{},"overview.html":{}}}],["legend",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["license",{"_index":644,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":621,"title":{},"body":{"index.html":{}}}],["logged",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":94,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["matching",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTask.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":379,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["maxlength(20",{"_index":382,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["message",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LatihanService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["metadata",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["minlength",{"_index":380,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(6",{"_index":381,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["miscellaneous",{"_index":584,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":620,"title":{},"body":{"index.html":{}}}],["mode",{"_index":610,"title":{},"body":{"index.html":{}}}],["module",{"_index":35,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["modules",{"_index":37,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":633,"title":{},"body":{"index.html":{}}}],["multer",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["myśliwiec",{"_index":639,"title":{},"body":{"index.html":{}}}],["name",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["nest",{"_index":598,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":643,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":529,"title":{},"body":{"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":546,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":174,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":177,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["node.js",{"_index":590,"title":{},"body":{"index.html":{}}}],["number",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CatsService.html":{},"classes/CreateTaskDto.html":{},"injectables/LatihanService.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTask.html":{}}}],["object",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":165,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["onmoduleinit",{"_index":391,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":622,"title":{},"body":{"index.html":{}}}],["optional",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateSchoolDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTask.html":{}}}],["out",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["overview",{"_index":648,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":568,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":288,"title":{},"body":{"controllers/CatsController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["param('id",{"_index":439,"title":{},"body":{"controllers/SchoolController.html":{}}}],["param('task_id",{"_index":511,"title":{},"body":{"controllers/TaskController.html":{}}}],["parameters",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["params",{"_index":287,"title":{},"body":{"controllers/CatsController.html":{}}}],["params.id",{"_index":296,"title":{},"body":{"controllers/CatsController.html":{}}}],["partialtype",{"_index":545,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["partialtype(createschooldto",{"_index":544,"title":{},"body":{"classes/UpdateSchoolDto.html":{}}}],["passport",{"_index":349,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":346,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":341,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["patch",{"_index":426,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["patch('/:task_id",{"_index":510,"title":{},"body":{"controllers/TaskController.html":{}}}],["patch(':id",{"_index":424,"title":{},"body":{"controllers/SchoolController.html":{}}}],["path",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":356,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.exp",{"_index":358,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":355,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["phone",{"_index":317,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["please",{"_index":631,"title":{},"body":{"index.html":{}}}],["post",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["post('avatar",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CatsController.html":{},"controllers/LatihanController.html":{},"controllers/SchoolController.html":{},"controllers/TaskController.html":{}}}],["prisma",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["prisma.service",{"_index":387,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":397,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":389,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":50,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":207,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["process.on('beforeexit",{"_index":400,"title":{},"body":{"injectables/PrismaService.html":{}}}],["production",{"_index":612,"title":{},"body":{"index.html":{}}}],["profile",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["profile(@req",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(id",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["profile(req",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["progressive",{"_index":589,"title":{},"body":{"index.html":{}}}],["project",{"_index":623,"title":{},"body":{"index.html":{}}}],["promise",{"_index":164,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["properties",{"_index":315,"title":{"properties.html":{}},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"interfaces/Task.html":{},"classes/UpdateTask.html":{},"properties.html":{}}}],["property",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["public",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["public/uploads/images",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["pumba",{"_index":310,"title":{},"body":{"injectables/CatsService.html":{}}}],["read",{"_index":632,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/SchoolController.html":{}}}],["reflect",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":108,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["registered",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":412,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["remove(@param('id",{"_index":441,"title":{},"body":{"controllers/SchoolController.html":{}}}],["remove(id",{"_index":419,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["repository",{"_index":601,"title":{},"body":{"index.html":{}}}],["req",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"injectables/TaskService.html":{}}}],["req.user.id",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["reset",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["result",{"_index":534,"title":{},"body":{"injectables/TaskService.html":{}}}],["results",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTask.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["rootpath",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["route",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["routing",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["run",{"_index":607,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":172,"title":{},"body":{"injectables/AuthGuard.html":{},"dependencies.html":{}}}],["scalable",{"_index":594,"title":{},"body":{"index.html":{}}}],["school",{"_index":407,"title":{"classes/School.html":{}},"body":{"classes/School.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["school.controller",{"_index":447,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.dto",{"_index":431,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{}}}],["school.dto.ts",{"_index":314,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["school.dto.ts:11",{"_index":322,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:15",{"_index":320,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:19",{"_index":323,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.dto.ts:6",{"_index":325,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["school.service",{"_index":429,"title":{},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{}}}],["school/school.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["school_name",{"_index":318,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["schoolcontroller",{"_index":409,"title":{"controllers/SchoolController.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"coverage.html":{}}}],["schoolmodule",{"_index":51,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schools",{"_index":456,"title":{},"body":{"injectables/SchoolService.html":{}}}],["schoolservice",{"_index":428,"title":{"injectables/SchoolService.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["secret",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":354,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["server",{"_index":595,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["side",{"_index":596,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"classes/School.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSchoolDto.html":{},"classes/UpdateTask.html":{},"index.html":{}}}],["sponsors",{"_index":626,"title":{},"body":{"index.html":{}}}],["src/.../jwt_config.ts",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":586,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../tasks.ts",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:14",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:9",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":80,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":81,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:23",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:34",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:50",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard",{"_index":502,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/auth/auth.guard.ts",{"_index":154,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:11",{"_index":161,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:17",{"_index":168,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:123",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:13",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:38",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:71",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:95",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":374,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:12",{"_index":378,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:6",{"_index":376,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":402,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/register.dto.ts:12",{"_index":405,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:17",{"_index":404,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/register.dto.ts:23",{"_index":406,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":340,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":345,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":343,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/cats/cats.controller.ts",{"_index":276,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:14",{"_index":282,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:19",{"_index":286,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.controller.ts:9",{"_index":283,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.module.ts",{"_index":300,"title":{},"body":{"modules/CatsModule.html":{}}}],["src/cats/cats.service.ts",{"_index":302,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cats/cats.service.ts:5",{"_index":305,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/config/jwt_config",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/config/jwt_config.ts",{"_index":560,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/latihan/latihan.controller.ts",{"_index":360,"title":{},"body":{"controllers/LatihanController.html":{},"coverage.html":{}}}],["src/latihan/latihan.controller.ts:9",{"_index":363,"title":{},"body":{"controllers/LatihanController.html":{}}}],["src/latihan/latihan.module.ts",{"_index":370,"title":{},"body":{"modules/LatihanModule.html":{}}}],["src/latihan/latihan.service.ts",{"_index":372,"title":{},"body":{"injectables/LatihanService.html":{},"coverage.html":{}}}],["src/latihan/latihan.service.ts:5",{"_index":373,"title":{},"body":{"injectables/LatihanService.html":{}}}],["src/main.ts",{"_index":563,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":386,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":388,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":394,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":396,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/school/dto/create",{"_index":313,"title":{},"body":{"classes/CreateSchoolDto.html":{},"coverage.html":{}}}],["src/school/dto/update",{"_index":543,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["src/school/entities/school.entity.ts",{"_index":408,"title":{},"body":{"classes/School.html":{},"coverage.html":{}}}],["src/school/school.controller.ts",{"_index":410,"title":{},"body":{"controllers/SchoolController.html":{},"coverage.html":{}}}],["src/school/school.controller.ts:19",{"_index":415,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:24",{"_index":416,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:29",{"_index":418,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:34",{"_index":425,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.controller.ts:42",{"_index":421,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/school/school.module.ts",{"_index":446,"title":{},"body":{"modules/SchoolModule.html":{}}}],["src/school/school.service.ts",{"_index":448,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["src/school/school.service.ts:19",{"_index":451,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:27",{"_index":452,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:35",{"_index":454,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:47",{"_index":453,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:7",{"_index":449,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/school/school.service.ts:9",{"_index":450,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/task/data/tasks.ts",{"_index":465,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/task/dto/create",{"_index":332,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/task/dto/update",{"_index":548,"title":{},"body":{"classes/UpdateTask.html":{},"coverage.html":{}}}],["src/task/task.controller.ts",{"_index":479,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["src/task/task.controller.ts:22",{"_index":487,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:28",{"_index":492,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:34",{"_index":495,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:40",{"_index":498,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:49",{"_index":490,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.module.ts",{"_index":519,"title":{},"body":{"modules/TaskModule.html":{}}}],["src/task/task.service.ts",{"_index":521,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/task/task.service.ts:15",{"_index":524,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:24",{"_index":526,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:43",{"_index":527,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:53",{"_index":528,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:64",{"_index":525,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:9",{"_index":522,"title":{},"body":{"injectables/TaskService.html":{}}}],["start",{"_index":608,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":611,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":613,"title":{},"body":{"index.html":{}}}],["started",{"_index":588,"title":{"index.html":{}},"body":{}}],["starter",{"_index":600,"title":{},"body":{"index.html":{}}}],["statements",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["status",{"_index":306,"title":{},"body":{"injectables/CatsService.html":{},"injectables/LatihanService.html":{}}}],["statuscode",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["stay",{"_index":635,"title":{},"body":{"index.html":{}}}],["storage",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["strategy",{"_index":348,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/LatihanService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"interfaces/Task.html":{},"classes/UpdateTask.html":{}}}],["successfully",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{},"injectables/TaskService.html":{}}}],["super",{"_index":350,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":175,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["support",{"_index":627,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":646,"title":{},"body":{"modules.html":{}}}],["table",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":462,"title":{"interfaces/Task.html":{}},"body":{"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["task.controller",{"_index":520,"title":{},"body":{"modules/TaskModule.html":{}}}],["task.dto",{"_index":501,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["task.dto.ts",{"_index":333,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTask.html":{},"coverage.html":{}}}],["task.dto.ts:10",{"_index":337,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTask.html":{}}}],["task.dto.ts:12",{"_index":339,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTask.html":{}}}],["task.dto.ts:6",{"_index":338,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/UpdateTask.html":{}}}],["task.service",{"_index":500,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["task/task.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["task_description",{"_index":334,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"classes/UpdateTask.html":{},"miscellaneous/variables.html":{}}}],["task_id",{"_index":466,"title":{},"body":{"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["task_name",{"_index":335,"title":{},"body":{"classes/CreateTaskDto.html":{},"interfaces/Task.html":{},"classes/UpdateTask.html":{},"miscellaneous/variables.html":{}}}],["taskcontroller",{"_index":478,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskdelete",{"_index":541,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskmodule",{"_index":52,"title":{"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["tasks",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskservice",{"_index":499,"title":{"injectables/TaskService.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["taskupdate",{"_index":539,"title":{},"body":{"injectables/TaskService.html":{}}}],["test",{"_index":616,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":619,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":618,"title":{},"body":{"index.html":{}}}],["testing",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["testroute",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["tests",{"_index":615,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":625,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":399,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(data",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.profile(req.user.id",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(data",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.uploadavatar",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.catservice.getdetailcat(params.id",{"_index":294,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.generatejwt",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.latihanservice.getlatihan",{"_index":367,"title":{},"body":{"controllers/LatihanController.html":{}}}],["this.prisma.schools.create",{"_index":455,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.delete",{"_index":460,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findmany",{"_index":457,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.findunique",{"_index":458,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.schools.update",{"_index":459,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.tasks.create",{"_index":535,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.delete",{"_index":542,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findfirst",{"_index":538,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.findmany",{"_index":536,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.tasks.update",{"_index":540,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.users.create",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.findfirst",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.update",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.req.user.id",{"_index":533,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.schoolservice.create(createschooldto",{"_index":435,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findall",{"_index":436,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findone(+id",{"_index":438,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.remove(+id",{"_index":442,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.update(+id",{"_index":440,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.taskservice.createtask(body",{"_index":505,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.deletetaskbyid(+task_id",{"_index":515,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.getalltask",{"_index":506,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.gettaskbyid(+task_id",{"_index":509,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.updatetask(+task_id",{"_index":512,"title":{},"body":{"controllers/TaskController.html":{}}}],["throw",{"_index":176,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["token",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["touch",{"_index":636,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["tuser",{"_index":169,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["twitter",{"_index":642,"title":{},"body":{"index.html":{}}}],["type",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTask.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":547,"title":{},"body":{"classes/UpdateSchoolDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":599,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":171,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["unit",{"_index":614,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["unlicensed",{"_index":651,"title":{},"body":{"properties.html":{}}}],["update",{"_index":413,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["update(id",{"_index":422,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["updated",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SchoolService.html":{}}}],["updateschooldto",{"_index":423,"title":{"classes/UpdateSchoolDto.html":{}},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolDto.html":{},"coverage.html":{}}}],["updatetask",{"_index":484,"title":{"classes/UpdateTask.html":{}},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/UpdateTask.html":{},"coverage.html":{}}}],["updatetask(task_id",{"_index":496,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updateuser",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateuser.avatar",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["uploadavatar(@req",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["uploadavatar(id",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar(req",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["uploadedfile",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["uploads/images",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard)@delete('/:task_id",{"_index":489,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get",{"_index":491,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get('/:task_id",{"_index":494,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@get('profile",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@patch('/:task_id",{"_index":497,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@post",{"_index":486,"title":{},"body":{"controllers/TaskController.html":{}}}],["useguards(authguard)@useinterceptors(undefined)@post('avatar",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":167,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["user.email",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.id",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.name",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_id",{"_index":336,"title":{},"body":{"classes/CreateTaskDto.html":{},"injectables/TaskService.html":{},"classes/UpdateTask.html":{}}}],["validate",{"_index":342,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":344,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":330,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateTaskDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/UpdateTask.html":{},"dependencies.html":{}}}],["value",{"_index":657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":652,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":649,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":609,"title":{},"body":{"index.html":{}}}],["website",{"_index":640,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":604,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":630,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SchoolModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                testRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        testRoute\n                        \n                    \n                \n            \n            \n                \n                        \n                    testRoute()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('test-route')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n  @Get('test-route')\n  testRoute(): string {\n    return 'Testing buat routing';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCatsModule\n\nCatsModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nLatihanModule\n\nLatihanModule\n\nAppModule -->\n\nLatihanModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nAppModule -->\n\nCatsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            CatsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CatsModule\n                        \n                        \n                            LatihanModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { CatsController } from './cats/cats.controller';\nimport { LatihanModule } from './latihan/latihan.module';\nimport { TaskModule } from './task/task.module';\nimport { CatsService } from './cats/cats.service';\nimport { CatsModule } from './cats/cats.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { SchoolModule } from './school/school.module';\n\n@Module({\n  imports: [\n    LatihanModule,\n    TaskModule,\n    CatsModule,\n    PrismaModule,\n    AuthModule,\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'public'),\n    }),\n    SchoolModule,\n  ],\n  controllers: [AppController, CatsController],\n  providers: [AppService, CatsService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Halo dunia ';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                profile\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@UseInterceptors(undefined)@Post('avatar')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Req,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { AuthGuard } from './auth.guard';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('register')\n  async register(@Body() data: RegisterDto) {\n    return await this.authService.register(data);\n  }\n\n  @Post('login')\n  async login(@Body() data: LoginDto) {\n    return await this.authService.login(data);\n  }\n\n  @UseGuards(AuthGuard)\n  @Get('profile')\n  async profile(@Req() req) {\n    return await this.authService.profile(req.user.id);\n  }\n\n  @UseGuards(AuthGuard)\n  @UseInterceptors(\n    FileInterceptor('avatar', {\n      storage: diskStorage({\n        destination: 'public/uploads/images',\n        filename: (req, file, cb) => {\n          cb(null, file.originalname);\n        },\n      }),\n    }),\n  )\n  @Post('avatar')\n  async uploadAvatar(@Req() req, @UploadedFile() file: Express.Multer.File) {\n    return await this.authService.uploadAvatar(\n      req.user.id,\n      '/uploads/images/' + file.originalname,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuardPassport('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err: any, user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:17\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    TUser\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     TUser\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { AuthGuard as AuthGuardPassport } from '@nestjs/passport';\n\n@Injectable()\nexport class AuthGuard extends AuthGuardPassport('jwt') {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err: any, user: any): TUser {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    } else {\n      return user;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/jwt_config';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n    JwtModule.register({\n      secret: jwt_config.secret,\n      signOptions: {\n        expiresIn: jwt_config.expired,\n      },\n    }),\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateJwt\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                profile\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateJwt\n                        \n                    \n                \n            \n            \n                \ngenerateJwt(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(id: number, avatar: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                avatar\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { RegisterDto } from './dto/register.dto';\nimport { compare, hash } from 'bcrypt';\nimport { LoginDto } from './dto/login.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/jwt_config';\n\n@Injectable()\nexport class AuthService {\n  constructor(private prisma: PrismaService, private jwtService: JwtService) {}\n\n  async register(data: RegisterDto) {\n    const checkExists = await this.prisma.users.findFirst({\n      where: {\n        email: data.email,\n      },\n    });\n\n    if (checkExists) {\n      throw new HttpException('User already exists', HttpStatus.FOUND);\n    }\n\n    data.password = await hash(data.password, 12);\n\n    const createUser = await this.prisma.users.create({\n      data: data,\n    });\n\n    if (createUser) {\n      return {\n        statusCode: HttpStatus.OK,\n        message: 'Registered successfully',\n      };\n    }\n  }\n\n  async login(data: LoginDto) {\n    const user = await this.prisma.users.findFirst({\n      where: {\n        email: data.email,\n      },\n    });\n\n    if (!user) {\n      throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n    }\n\n    const checkPassword = await compare(data.password, user.password);\n\n    if (!checkPassword) {\n      throw new HttpException(\n        'User or password invalid',\n        HttpStatus.UNAUTHORIZED,\n      );\n    }\n\n    const accessToken = this.generateJwt({\n      id: user.id,\n      name: user.name,\n      email: user.email,\n    });\n\n    return {\n      statusCode: HttpStatus.OK,\n      message: 'Logged in successfully',\n      token: accessToken,\n    };\n  }\n\n  async profile(id: number) {\n    const user = await this.prisma.users.findFirst({\n      where: {\n        id: id,\n      },\n      select: {\n        id: true,\n        name: true,\n        email: true,\n        avatar: true,\n        tasks: true,\n      },\n    });\n\n    if (!user) {\n      throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n    }\n\n    return {\n      statusCode: HttpStatus.OK,\n      data: user,\n    };\n  }\n\n  async uploadAvatar(id: number, avatar: string) {\n    const checkUserExists = await this.prisma.users.findFirst({\n      where: {\n        id: id,\n      },\n    });\n    if (checkUserExists) {\n      const updateUser = await this.prisma.users.update({\n        where: {\n          id: id,\n        },\n        data: {\n          avatar: avatar,\n        },\n      });\n\n      if (updateUser) {\n        return {\n          statusCode: HttpStatus.OK,\n          message: 'Avatar updated successfully',\n          data: updateUser.avatar,\n        };\n      }\n    }\n\n    throw new HttpException('Bad Request', HttpStatus.BAD_REQUEST);\n  }\n\n  generateJwt(payload: any) {\n    return this.jwtService.sign(payload, {\n      secret: jwt_config.secret,\n      expiresIn: jwt_config.expired,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                detailCat\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        detailCat\n                        \n                    \n                \n            \n            \n                \n                        \n                    detailCat()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('detail')\n                \n            \n\n                    \n                        \n                            Defined in src/cats/cats.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/cats/cats.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(params: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/cats/cats.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { CatsService } from './cats.service';\n\n@Controller('cats')\nexport class CatsController {\n  constructor(private catService: CatsService) {}\n\n  @Get()\n  findAll(): string {\n    return 'Return all cats';\n  }\n\n  @Get('detail')\n  detailCat(): string {\n    return 'detail cats';\n  }\n\n  @Get(':id')\n  findOne(@Param() params: any) {\n    return this.catService.getDetailCat(params.id);\n    // return `This action returns a #${params.id} cat`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_providers\n\n\n\n\nCatsService\n\nCatsService\n\n\n\nCatsModule\n\nCatsModule\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/cats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\n\n@Module({\n  controllers: [CatsController],\n  providers: [CatsService],\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetailCat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetailCat\n                        \n                    \n                \n            \n            \n                \ngetDetailCat(id: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cats/cats.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { status: number; idCat: any; catCategory: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class CatsService {\n  getDetailCat(id: any) {\n    return {\n      status: 200,\n      idCat: id,\n      catCategory: 'Pumba',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchoolDto.html":{"url":"classes/CreateSchoolDto.html","title":"class - CreateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/create-school.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                school_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        school_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/school/dto/create-school.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateSchoolDto {\n  @IsString()\n  @IsNotEmpty()\n  school_name: string;\n\n  @IsString()\n  @IsOptional()\n  @IsEmail()\n  email?: string;\n\n  @IsString()\n  @IsOptional()\n  address?: string;\n\n  @IsString()\n  @IsOptional()\n  phone?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/create-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                            \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateTaskDto {\n  @IsString()\n  @IsNotEmpty()\n  task_name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  task_description: string;\n\n  user_id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { jwt_config } from 'src/config/jwt_config';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwt_config.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return {\n      id: payload.id,\n      email: payload.email,\n      expired: payload.exp,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LatihanController.html":{"url":"controllers/LatihanController.html","title":"controller - LatihanController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LatihanController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/latihan/latihan.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                latihan\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getLatihan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getLatihan\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLatihan()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/latihan/latihan.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { LatihanService } from './latihan.service';\n\n@Controller('latihan')\nexport class LatihanController {\n  constructor(private latihanService: LatihanService) {}\n\n  @Get()\n  getLatihan() {\n    return this.latihanService.getLatihan();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LatihanModule.html":{"url":"modules/LatihanModule.html","title":"module - LatihanModule","body":"\n                   \n\n\n\n\n    Modules\n    LatihanModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LatihanModule\n\n\n\ncluster_LatihanModule_providers\n\n\n\n\nLatihanService\n\nLatihanService\n\n\n\nLatihanModule\n\nLatihanModule\n\nLatihanModule -->\n\nLatihanService->LatihanModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/latihan/latihan.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LatihanService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LatihanController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LatihanController } from './latihan.controller';\nimport { LatihanService } from './latihan.service';\n\n@Module({\n  controllers: [LatihanController],\n  providers: [LatihanService],\n})\nexport class LatihanModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LatihanService.html":{"url":"injectables/LatihanService.html","title":"injectable - LatihanService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LatihanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/latihan/latihan.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLatihan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLatihan\n                        \n                    \n                \n            \n            \n                \ngetLatihan()\n                \n            \n\n\n                    \n                        \n                            Defined in src/latihan/latihan.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { status: number; message: string; }\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class LatihanService {\n  getLatihan() {\n    return {\n      status: 200,\n      message: 'latihan',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, MaxLength, MinLength } from 'class-validator';\n\nexport class LoginDto {\n  @IsNotEmpty()\n  @IsString()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    process.on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class RegisterDto {\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/entities/school.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class School {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SchoolController.html":{"url":"controllers/SchoolController.html","title":"controller - SchoolController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SchoolController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                school\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSchoolDto\n                                            \n                                                            CreateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/school/school.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSchoolDto\n                                            \n                                                            UpdateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\n\n@Controller('school')\nexport class SchoolController {\n  constructor(private readonly schoolService: SchoolService) {}\n\n  @Post()\n  async create(@Body() createSchoolDto: CreateSchoolDto) {\n    return await this.schoolService.create(createSchoolDto);\n  }\n\n  @Get()\n  async findAll() {\n    return await this.schoolService.findAll();\n  }\n\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    return await this.schoolService.findOne(+id);\n  }\n\n  @Patch(':id')\n  async update(\n    @Param('id') id: string,\n    @Body() updateSchoolDto: UpdateSchoolDto,\n  ) {\n    return await this.schoolService.update(+id, updateSchoolDto);\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    return await this.schoolService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_imports\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SchoolController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SchoolService } from './school.service';\nimport { SchoolController } from './school.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [SchoolController],\n  providers: [SchoolService],\n})\nexport class SchoolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/school.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/school/school.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSchoolDto: CreateSchoolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSchoolDto\n                                            \n                                                            CreateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateSchoolDto: UpdateSchoolDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/school/school.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSchoolDto\n                                            \n                                                            UpdateSchoolDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable } from '@nestjs/common';\nimport { CreateSchoolDto } from './dto/create-school.dto';\nimport { UpdateSchoolDto } from './dto/update-school.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class SchoolService {\n  constructor(private prisma: PrismaService) {}\n  async create(createSchoolDto: CreateSchoolDto) {\n    const school = await this.prisma.schools.create({\n      data: createSchoolDto,\n    });\n    return {\n      statusCode: HttpStatus.OK,\n      data: school,\n    };\n  }\n\n  async findAll() {\n    const schools = await this.prisma.schools.findMany();\n    return {\n      statusCode: HttpStatus.OK,\n      data: schools,\n    };\n  }\n\n  async findOne(id: number) {\n    const school = await this.prisma.schools.findUnique({ where: { id: id } });\n    return {\n      statusCode: HttpStatus.OK,\n      data: school,\n    };\n  }\n\n  async update(id: number, updateSchoolDto: UpdateSchoolDto) {\n    const school = await this.prisma.schools.update({\n      where: { id: id },\n      data: updateSchoolDto,\n    });\n    return {\n      statusCode: HttpStatus.OK,\n      message: 'School updated successfully',\n      data: school,\n    };\n  }\n\n  async remove(id: number) {\n    const school = await this.prisma.schools.delete({ where: { id: id } });\n    if (school) {\n      return {\n        statusCode: HttpStatus.OK,\n        data: 'School deleted successfully',\n      };\n    }\n\n    return {\n      statusCode: HttpStatus.NOT_FOUND,\n      message: 'Task not found',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/data/tasks.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            task_description\n                                        \n                                \n                                \n                                        \n                                            task_id\n                                        \n                                \n                                \n                                        \n                                            task_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        task_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  task_id: number;\n  task_name: string;\n  task_description: string;\n}\n\nexport const tasks: Task[] = [\n  {\n    task_id: 1,\n    task_name: 'Task 1',\n    task_description: 'Description of Task 1',\n  },\n  {\n    task_id: 2,\n    task_name: 'Task 2',\n    task_description: 'Description of Task 2',\n  },\n  {\n    task_id: 3,\n    task_name: 'Task 3',\n    task_description: 'Description of Task 3',\n  },\n  {\n    task_id: 4,\n    task_name: 'Task 4',\n    task_description: 'Description of Task 4',\n  },\n  {\n    task_id: 5,\n    task_name: 'Task 5',\n    task_description: 'Description of Task 5',\n  },\n  {\n    task_id: 6,\n    task_name: 'Task 6',\n    task_description: 'Description of Task 6',\n  },\n  {\n    task_id: 7,\n    task_name: 'Task 7',\n    task_description: 'Description of Task 7',\n  },\n  {\n    task_id: 8,\n    task_name: 'Task 8',\n    task_description: 'Description of Task 8',\n  },\n  {\n    task_id: 9,\n    task_name: 'Task 9',\n    task_description: 'Description of Task 9',\n  },\n  {\n    task_id: 10,\n    task_name: 'Task 10',\n    task_description: 'Description of Task 10',\n  },\n];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteTaskById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTaskById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(body: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            CreateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        deleteTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTaskById(task_id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Delete('/:task_id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllTask()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTaskById(task_id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Get('/:task_id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTask(task_id: number, data: UpdateTask)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@Patch('/:task_id')\n                \n            \n\n                    \n                        \n                            Defined in src/task/task.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UpdateTask\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { TaskService } from './task.service';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { UpdateTask } from './dto/update-task.dto';\nimport { AuthGuard } from 'src/auth/auth.guard';\n\n@Controller('task')\nexport class TaskController {\n  constructor(private taskService: TaskService) {}\n\n  @UseGuards(AuthGuard)\n  @Post()\n  async createTask(@Body() body: CreateTaskDto) {\n    return await this.taskService.createTask(body);\n  }\n\n  @UseGuards(AuthGuard)\n  @Get()\n  async getAllTask() {\n    return await this.taskService.getAllTask();\n  }\n\n  @UseGuards(AuthGuard)\n  @Get('/:task_id')\n  async getTaskById(@Param('task_id') task_id: number) {\n    return await this.taskService.getTaskById(+task_id);\n  }\n\n  @UseGuards(AuthGuard)\n  @Patch('/:task_id')\n  async updateTask(\n    @Param('task_id') task_id: number,\n    @Body() data: UpdateTask,\n  ) {\n    return await this.taskService.updateTask(+task_id, data);\n  }\n\n  @UseGuards(AuthGuard)\n  @Delete('/:task_id')\n  async deleteTaskById(@Param('task_id') task_id: number) {\n    return this.taskService.deleteTaskById(+task_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_imports\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './task.controller';\nimport { TaskService } from './task.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [TaskController],\n  providers: [TaskService],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTask\n                            \n                            \n                                    Async\n                                deleteTaskById\n                            \n                            \n                                    Async\n                                getAllTask\n                            \n                            \n                                    Async\n                                getTaskById\n                            \n                            \n                                    Async\n                                updateTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, req: any)\n                    \n                \n                        \n                            \n                                Defined in src/task/task.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTask(data: CreateTaskDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateTaskDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTaskById(task_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllTask()\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTaskById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTaskById(task_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateTask\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTask(task_id: number, data: UpdateTask)\n                \n            \n\n\n                    \n                        \n                            Defined in src/task/task.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                task_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UpdateTask\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable } from '@nestjs/common';\nimport { CreateTaskDto } from './dto/create-task.dto';\nimport { UpdateTask } from './dto/update-task.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { REQUEST } from '@nestjs/core';\nimport { Inject } from '@nestjs/common';\n\n@Injectable()\nexport class TaskService {\n  constructor(\n    private prisma: PrismaService,\n    @Inject(REQUEST) private req: any,\n  ) {}\n\n  async createTask(data: CreateTaskDto) {\n    data.user_id = this.req.user.id;\n    const result = await this.prisma.tasks.create({ data });\n    return {\n      statusCode: HttpStatus.OK,\n      data: result,\n    };\n  }\n\n  async getAllTask() {\n    const result = await this.prisma.tasks.findMany({\n      where: { user_id: this.req.user.id },\n      include: {\n        user: {\n          select: {\n            id: true,\n            name: true,\n            email: true,\n          },\n        },\n      },\n    });\n    return {\n      statusCode: HttpStatus.OK,\n      data: result,\n    };\n  }\n\n  async getTaskById(task_id: number) {\n    const task = await this.prisma.tasks.findFirst({\n      where: { id: task_id, user_id: this.req.user.id },\n    });\n    return {\n      statusCode: HttpStatus.OK,\n      data: task,\n    };\n  }\n\n  async updateTask(task_id: number, data: UpdateTask) {\n    const taskUpdate = await this.prisma.tasks.update({\n      where: { id: task_id },\n      data: data,\n    });\n    return {\n      statusCode: HttpStatus.OK,\n      data: taskUpdate,\n    };\n  }\n\n  async deleteTaskById(task_id: number) {\n    const taskDelete = await this.prisma.tasks.delete({\n      where: { id: task_id },\n    });\n\n    if (!taskDelete) {\n      return {\n        statusCode: HttpStatus.NOT_FOUND,\n        message: 'Task not found',\n      };\n    }\n\n    return {\n      statusCode: HttpStatus.OK,\n      message: 'Task deleted successfully',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSchoolDto.html":{"url":"classes/UpdateSchoolDto.html","title":"class - UpdateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/school/dto/update-school.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSchoolDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSchoolDto } from './create-school.dto';\n\nexport class UpdateSchoolDto extends PartialType(CreateSchoolDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTask.html":{"url":"classes/UpdateTask.html","title":"class - UpdateTask","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTask\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/update-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                task_description\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                task_name\n                            \n                            \n                                user_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\n\nexport class UpdateTask {\n  @IsString()\n  @IsOptional()\n  task_name?: string;\n\n  @IsOptional()\n  @IsString()\n  task_description?: string;\n\n  user_id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/jwt_config.ts\n            \n            variable\n            jwt_config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/latihan/latihan.controller.ts\n            \n            controller\n            LatihanController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/latihan/latihan.service.ts\n            \n            injectable\n            LatihanService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/school/dto/create-school.dto.ts\n            \n            class\n            CreateSchoolDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/school/dto/update-school.dto.ts\n            \n            class\n            UpdateSchoolDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/entities/school.entity.ts\n            \n            class\n            School\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/school/school.controller.ts\n            \n            controller\n            SchoolController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/school/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/task/data/tasks.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/data/tasks.ts\n            \n            variable\n            tasks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/task/dto/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/dto/update-task.dto.ts\n            \n            class\n            UpdateTask\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/task/task.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/serve-static : ^4.0.0\n        \n            @prisma/client : ^5.7.1\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LatihanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_LatihanModule\n\n\n\ncluster_LatihanModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCatsModule\n\nCatsModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nLatihanModule\n\nLatihanModule\n\nAppModule -->\n\nLatihanModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCatsService\n\nCatsService\n\nCatsModule -->\n\nCatsService->CatsModule\n\n\n\nAppModule -->\n\nCatsService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLatihanService\n\nLatihanService\n\nLatihanModule -->\n\nLatihanService->LatihanModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwt_config   (src/.../jwt_config.ts)\n                        \n                        \n                            tasks   (src/.../tasks.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/jwt_config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwt_config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: 'asdqwe123',\n  expired: 3600,\n}\n                    \n                \n\n\n        \n    \n\n    src/task/data/tasks.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    task_id: 1,\n    task_name: 'Task 1',\n    task_description: 'Description of Task 1',\n  },\n  {\n    task_id: 2,\n    task_name: 'Task 2',\n    task_description: 'Description of Task 2',\n  },\n  {\n    task_id: 3,\n    task_name: 'Task 3',\n    task_description: 'Description of Task 3',\n  },\n  {\n    task_id: 4,\n    task_name: 'Task 4',\n    task_description: 'Description of Task 4',\n  },\n  {\n    task_id: 5,\n    task_name: 'Task 5',\n    task_description: 'Description of Task 5',\n  },\n  {\n    task_id: 6,\n    task_name: 'Task 6',\n    task_description: 'Description of Task 6',\n  },\n  {\n    task_id: 7,\n    task_name: 'Task 7',\n    task_description: 'Description of Task 7',\n  },\n  {\n    task_id: 8,\n    task_name: 'Task 8',\n    task_description: 'Description of Task 8',\n  },\n  {\n    task_id: 9,\n    task_name: 'Task 9',\n    task_description: 'Description of Task 9',\n  },\n  {\n    task_id: 10,\n    task_name: 'Task 10',\n    task_description: 'Description of Task 10',\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
